const t=window.Blazor,i=document,r="enhancedload",u=localStorage,f=sessionStorage,e=n=>decodeURIComponent(i.cookie.split(/[; ]+/).map(n=>n.split("=")).filter(t=>t[0]===n)[0]?.pop()||"").match(/\|uic=(.+)$/)?.pop()||null,n=({persistenceLevel:t,cookieName:n,storageKey:i})=>{const o=f.getItem(i),s=u.getItem(i),h=e(n),r=([1,2].includes(t)?o:null)||(t===2?s:null)||([3,4].includes(t)?h:null),c=r?[r]:navigator.languages||[navigator.browserLanguage];return c[0]||"en"},o=(n,{persistenceLevel:r,cookieName:t,storageKey:e})=>{[1,2].includes(r)&&f.setItem(e,n),r===2&&u.setItem(e,n),[3,4].includes(r)&&(i.cookie=`${t}=${encodeURIComponent(`c=${n}|uic=${n}`)}`+(r===4)?"; expires=Fri, 31 Dec 9999 23:59:59 GMT;":"")};export const attach=async(i,u)=>{const f={currentLang:n(u),getCurrentLang:()=>n(u),setCurrentLang:n=>o(n,u)},e=()=>{const t=n(u);if(f.currentLang!==t){f.currentLang=t;try{i.invokeMethodAsync("OnLanguageChanged",t)}catch(r){console.error("Error invoking OnLanguageChanged",r)}}};t?.addEventListener(r,e);const s=()=>f.dispose?.(),{circuitClosed:h}=await import("./Toolbelt.Blazor.I18nText.lib.module.js");return h.add(s),f.dispose=()=>{t?.removeEventListener(r,e),h.remove(s)},f};